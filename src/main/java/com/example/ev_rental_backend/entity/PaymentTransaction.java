package com.example.ev_rental_backend.entity;

import jakarta.persistence.*;
import lombok.*;
import java.math.BigDecimal;
import java.time.LocalDateTime;

@Entity
@Table(name = "payment_transaction")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class PaymentTransaction {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long transactionId;

    // Li√™n k·∫øt ƒë·∫øn Invoice (n·∫øu giao d·ªãch thu·ªôc h√≥a ƒë∆°n)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "invoice_id")
    private Invoice invoice;

    // Li√™n k·∫øt ƒë·∫øn Wallet (n·∫øu l√† n·∫°p/r√∫t ho·∫∑c thanh to√°n b·∫±ng v√≠)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "wallet_id")
    private Wallet wallet;

    // Th·ªùi gian giao d·ªãch
    private LocalDateTime transactionTime;

    // S·ªë ti·ªÅn giao d·ªãch
    @Column(nullable = false)
    private BigDecimal amount;

    // Tr·∫°ng th√°i giao d·ªãch
    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false, length = 50)
    private Status status = Status.PENDING;

    // Lo·∫°i giao d·ªãch
    @Enumerated(EnumType.STRING)
    @Column(name = "transaction_type", nullable = false, length = 50)
    private TransactionType transactionType;

    // tr∆∞·ªùng orderCode
    @Column(unique = true)
    private Long orderCode;

    // üÜï Payment Link ID t·ª´ PayOS
    private String paymentLinkId;

    // üÜï Reference code t·ª´ PayOS (m√£ giao d·ªãch th·ª±c t·∫ø)
    private String referenceCode;

    // üÜï Ghi ch√∫ / L√Ω do (VD: l√Ω do failed, cancelled)
    @Column(length = 500)
    private String notes;

    @PrePersist
    public void prePersist() {
        if (transactionTime == null) {
            transactionTime = LocalDateTime.now();
        }
    }

    // ================= Enums ================= //

    public enum Status {
        PENDING, SUCCESS, FAILED
    }

    public enum TransactionType {
        INVOICE_CASH,       // Thanh to√°n h√≥a ƒë∆°n b·∫±ng ti·ªÅn m·∫∑t
        INVOICE_WALLET,     // Thanh to√°n h√≥a ƒë∆°n b·∫±ng v√≠
        INVOICE_MOMO,       // Thanh to√°n h√≥a ƒë∆°n qua Momo
        INVOICE_PAYOS,      // Thanh to√°n h√≥a ƒë∆°n qua Payos
        WALLET_TOPUP,       // N·∫°p ti·ªÅn v√†o v√≠
        WALLET_WITHDRAW,     // R√∫t ti·ªÅn kh·ªèi v√≠
        WALLET_REFUND_DEPOSIT
    }
}
