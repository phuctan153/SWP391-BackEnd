package com.example.ev_rental_backend.service.warning;

import com.example.ev_rental_backend.dto.warning.WarningRequestDTO;
import com.example.ev_rental_backend.dto.warning.WarningResponseDTO;
import com.example.ev_rental_backend.entity.Booking;
import com.example.ev_rental_backend.entity.Renter;
import com.example.ev_rental_backend.mapper.WarningMapper;
import com.example.ev_rental_backend.repository.BookingRepository;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class WarningServiceImpl implements WarningService {

    private final BookingRepository bookingRepository;
    private final WarningMapper warningMapper;
    private final JavaMailSender mailSender;

    public WarningResponseDTO sendWarningEmail(WarningRequestDTO dto) {

        // üîπ 1. L·∫•y booking & renter
        Booking booking = bookingRepository.findBookingWithDetails(dto.getBookingId())
                .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y booking"));

        Renter renter = booking.getRenter();
        if (renter.getEmail() == null || renter.getEmail().isEmpty()) {
            throw new RuntimeException("Renter kh√¥ng c√≥ email h·ª£p l·ªá ƒë·ªÉ g·ª≠i c·∫£nh c√°o");
        }

        // üîπ 2. So·∫°n email HTML
        String subject = "‚ö†Ô∏è C·∫£nh c√°o vi ph·∫°m t·ª´ EV Rental System";
        String content = """
                <html>
                <body>
                    <p>Xin ch√†o <b>%s</b>,</p>
                    <p>H·ªá th·ªëng EV Rental ghi nh·∫≠n r·∫±ng trong ƒë∆°n thu√™ xe <b>#%d</b> 
                    (xe: %s - bi·ªÉn s·ªë %s) c√≥ ph√°t sinh h∆∞ h·ªèng.</p>

                    <p><b>Ghi ch√∫ t·ª´ qu·∫£n tr·ªã vi√™n:</b></p>
                    <blockquote style='color:#d9534f;'>%s</blockquote>

                    <p>Xin l∆∞u √Ω r·∫±ng n·∫øu vi ph·∫°m l·∫∑p l·∫°i, t√†i kho·∫£n c·ªßa b·∫°n c√≥ th·ªÉ b·ªã ƒë∆∞a v√†o 
                    danh s√°ch <b>Black List</b> v√† t·∫°m kh√≥a trong v√≤ng <b>6 th√°ng</b>.</p>

                    <p>Tr√¢n tr·ªçng,<br/>EV Rental System Team</p>
                </body>
                </html>
                """.formatted(
                renter.getFullName(),
                booking.getBookingId(),
                booking.getVehicle().getModel(),
                booking.getVehicle().getPlateNumber(),
                dto.getNote()
        );

        // üîπ 3. G·ª≠i email
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(renter.getEmail());
            helper.setSubject(subject);
            helper.setText(content, true);

            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("Kh√¥ng th·ªÉ g·ª≠i email c·∫£nh c√°o: " + e.getMessage());
        }

        // üîπ 4. Tr·∫£ v·ªÅ k·∫øt qu·∫£
        return warningMapper.toResponseDTO(booking, "C·∫£nh c√°o ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi " + renter.getEmail());
    }
}
